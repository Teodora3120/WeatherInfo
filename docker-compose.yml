version: '3.8'

services:
  db:
    image: postgres:14
    container_name: weather_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db

  weather_app:
    build: .
    container_name: weather_app
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      - DB_HOST=weather_db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    ports:
      - "8000:8000"
    env_file:
      - .env
    command: >
      sh -c "echo 'Waiting for DB...' &&
            /wait-for-it.sh weather_db:5432 --timeout=30 --strict &&
            echo 'Running Alembic migrations...' &&
            alembic upgrade head &&
            echo 'Starting app...' &&
            python scripts/manage.py run"
volumes:
  pgdata:
  pgadmin-data:
